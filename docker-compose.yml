services:
  postgres:
    image: docker.io/library/postgres:13.6-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DATABASE_DB_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  elasticsearch:
    healthcheck:
      test: ['CMD', 'curl', '-f', '127.0.0.1:9200']
    image: docker.io/library/elasticsearch:7.17.26
    environment:
      http.host: 0.0.0.0
      transport.host: 0.0.0.0
      ES_JAVA_OPTS: -Xms128m -Xmx128m
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 4g

  kibana:
    depends_on:
      - elasticsearch
    image: docker.io/library/kibana:7.17.0

  logstash:
    env_file:
      - .env
    depends_on:
      - schema
    build: script/search_indexing
    tmpfs:
      - /usr/share/logstash/data
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m

  redis:
    image: docker.io/library/redis:7.2
    command: redis-server
    volumes:
      - redis:/data

  schema:
    build: .
    command: [rake, db:migrate, 'comfy:cms_seeds:import[lumen_cms,lumen_cms]', db:seed]
    depends_on:
      elasticsearch:
        condition: service_healthy
      postgres:
        condition: service_started
    env_file:
      - .env

  app:
    depends_on:
      schema:
        condition: service_completed_successfully
    build: .
    healthcheck:
      test: ['CMD', 'wget', '-q', '--spider', '127.0.0.1:3000']
    ports:
      - 3000:3000
    volumes:
      - .:/srv
    env_file:
      - .env

  http:
    depends_on:
      app:
        condition: service_healthy
    build: http
    ports:
      - 8080:80

  jobs:
    depends_on:
      app:
        condition: service_healthy
    build: .
    volumes:
      - .:/srv
    env_file:
      - .env
    command: bundle exec sidekiq

volumes:
  postgres:
  esdata:
  redis:
